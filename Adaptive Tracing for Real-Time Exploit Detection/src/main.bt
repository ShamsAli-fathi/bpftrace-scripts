#!/usr/bin/env bpftrace

BEGIN {
    printf("Monitoring ACPI exploit attempts and lockdown status...\n");
    @modprobe_executed = 0;
    @aml_opened = 0;
}

kprobe:lockdown_write,
kprobe:security_locked_down
{
    $addr = kaddr("kernel_locked_down");
    $value = *$addr;

    if ($value != 0 && @modprobe_executed == 1 && @aml_opened == 1) {
         printf("kernel lockdown status changed");
         printf("acpi_load_table() called by PID %d (%s)\n", @acpi_pid, @acpi_comm);
         printf("modprobe acpi_configfs executed by PID %d (%s)\n", @exe_pid, @exe_comm);
         printf("Exploit Detected!\n");
         @modprobe_executed = 0;
         @aml_opened = 0;
    }
}


kprobe:acpi_load_table
{
    @aml_opened = 1;
    @acpi_pid = pid;
    @acpi_comm = comm;

    $addr = kaddr("kernel_locked_down");
    $value = *$addr;
    if ($value != 0 && @modprobe_executed == 1 && @aml_opened == 1) {
         printf("kernel lockdown status changed \n");
         printf("acpi_load_table() called by PID %d (%s)\n", @acpi_pid, @acpi_comm);
         printf("modprobe acpi_configfs executed by PID %d (%s)\n", @exe_pid, @exe_comm);
         printf("Potential Exploit Detected!\n");
         @modprobe_executed = 0;
         @aml_opened = 0;
    }
}

tracepoint:syscalls:sys_enter_execve
/str(args->argv[0]) == "modprobe" && str(args->argv[1]) == "acpi_configfs"/
{
    @modprobe_executed = 1;
    @exe_pid = pid;
    @exe_comm = comm;

    $addr = kaddr("kernel_locked_down");
    $value = *$addr;
    if ($value != 0 && @modprobe_executed == 1 && @aml_opened == 1) {
         printf("kernel lockdown status changed");
         printf("acpi_load_table() called by PID %d (%s)\n", @acpi_pid, @acpi_comm);
         printf("modprobe acpi_configfs executed by PID %d (%s)\n", @exe_pid, @exe_comm);
         printf("Exploit Detected!\n");
         @modprobe_executed = 0;
         @aml_opened = 0;
    }
}
